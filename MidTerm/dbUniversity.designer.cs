#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MidTerm
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="University")]
	public partial class dbUniversityDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAcademic_Affair(Academic_Affair instance);
    partial void UpdateAcademic_Affair(Academic_Affair instance);
    partial void DeleteAcademic_Affair(Academic_Affair instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertLecture(Lecture instance);
    partial void UpdateLecture(Lecture instance);
    partial void DeleteLecture(Lecture instance);
    partial void InsertLectureRegisClass(LectureRegisClass instance);
    partial void UpdateLectureRegisClass(LectureRegisClass instance);
    partial void DeleteLectureRegisClass(LectureRegisClass instance);
    partial void InsertLectureVio(LectureVio instance);
    partial void UpdateLectureVio(LectureVio instance);
    partial void DeleteLectureVio(LectureVio instance);
    partial void InsertOpenClass(OpenClass instance);
    partial void UpdateOpenClass(OpenClass instance);
    partial void DeleteOpenClass(OpenClass instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertStudentRegisClass(StudentRegisClass instance);
    partial void UpdateStudentRegisClass(StudentRegisClass instance);
    partial void DeleteStudentRegisClass(StudentRegisClass instance);
    partial void InsertStudentVio(StudentVio instance);
    partial void UpdateStudentVio(StudentVio instance);
    partial void DeleteStudentVio(StudentVio instance);
    partial void InsertSubject_(Subject_ instance);
    partial void UpdateSubject_(Subject_ instance);
    partial void DeleteSubject_(Subject_ instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertViolate(Violate instance);
    partial void UpdateViolate(Violate instance);
    partial void DeleteViolate(Violate instance);
    #endregion
		
		public dbUniversityDataContext() : 
				base(global::MidTerm.Properties.Settings.Default.UniversityConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbUniversityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbUniversityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbUniversityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbUniversityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Academic_Affair> Academic_Affairs
		{
			get
			{
				return this.GetTable<Academic_Affair>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<AdminTest> AdminTests
		{
			get
			{
				return this.GetTable<AdminTest>();
			}
		}
		
		public System.Data.Linq.Table<Class> Classes
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Lecture> Lectures
		{
			get
			{
				return this.GetTable<Lecture>();
			}
		}
		
		public System.Data.Linq.Table<LectureRegisClass> LectureRegisClasses
		{
			get
			{
				return this.GetTable<LectureRegisClass>();
			}
		}
		
		public System.Data.Linq.Table<LectureVio> LectureVios
		{
			get
			{
				return this.GetTable<LectureVio>();
			}
		}
		
		public System.Data.Linq.Table<OpenClass> OpenClasses
		{
			get
			{
				return this.GetTable<OpenClass>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<StudentRegisClass> StudentRegisClasses
		{
			get
			{
				return this.GetTable<StudentRegisClass>();
			}
		}
		
		public System.Data.Linq.Table<StudentVio> StudentVios
		{
			get
			{
				return this.GetTable<StudentVio>();
			}
		}
		
		public System.Data.Linq.Table<Subject_> Subject_s
		{
			get
			{
				return this.GetTable<Subject_>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Violate> Violates
		{
			get
			{
				return this.GetTable<Violate>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Academic_Affair")]
	public partial class Academic_Affair : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _username;
		
		private string _name_;
		
		private string _sex;
		
		private string _dob;
		
		private string _phone_num;
		
		private string _department_id;
		
		private System.Data.Linq.Binary _picture;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onname_Changing(string value);
    partial void Onname_Changed();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void OndobChanging(string value);
    partial void OndobChanged();
    partial void Onphone_numChanging(string value);
    partial void Onphone_numChanged();
    partial void Ondepartment_idChanging(string value);
    partial void Ondepartment_idChanged();
    partial void OnpictureChanging(System.Data.Linq.Binary value);
    partial void OnpictureChanged();
    #endregion
		
		public Academic_Affair()
		{
			this._Department = default(EntityRef<Department>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_", DbType="NVarChar(50)")]
		public string name_
		{
			get
			{
				return this._name_;
			}
			set
			{
				if ((this._name_ != value))
				{
					this.Onname_Changing(value);
					this.SendPropertyChanging();
					this._name_ = value;
					this.SendPropertyChanged("name_");
					this.Onname_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="NVarChar(20)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="NVarChar(20)")]
		public string dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_num", DbType="NVarChar(15)")]
		public string phone_num
		{
			get
			{
				return this._phone_num;
			}
			set
			{
				if ((this._phone_num != value))
				{
					this.Onphone_numChanging(value);
					this.SendPropertyChanging();
					this._phone_num = value;
					this.SendPropertyChanged("phone_num");
					this.Onphone_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", DbType="NVarChar(10)")]
		public string department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if ((this._picture != value))
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Academic_Affair", Storage="_Department", ThisKey="department_id", OtherKey="department_id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Academic_Affairs.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Academic_Affairs.Add(this);
						this._department_id = value.department_id;
					}
					else
					{
						this._department_id = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Academic_Affair", Storage="_User", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Academic_Affair = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Academic_Affair = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _usename;
		
		private string _name_;
		
		private string _sex;
		
		private string _phone_num;
		
		private string _dob;
		
		private System.Data.Linq.Binary _picture;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnusenameChanging(string value);
    partial void OnusenameChanged();
    partial void Onname_Changing(string value);
    partial void Onname_Changed();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void Onphone_numChanging(string value);
    partial void Onphone_numChanged();
    partial void OndobChanging(string value);
    partial void OndobChanged();
    partial void OnpictureChanging(System.Data.Linq.Binary value);
    partial void OnpictureChanged();
    #endregion
		
		public Admin()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usename", DbType="NVarChar(50)")]
		public string usename
		{
			get
			{
				return this._usename;
			}
			set
			{
				if ((this._usename != value))
				{
					this.OnusenameChanging(value);
					this.SendPropertyChanging();
					this._usename = value;
					this.SendPropertyChanged("usename");
					this.OnusenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_", DbType="NVarChar(50)")]
		public string name_
		{
			get
			{
				return this._name_;
			}
			set
			{
				if ((this._name_ != value))
				{
					this.Onname_Changing(value);
					this.SendPropertyChanging();
					this._name_ = value;
					this.SendPropertyChanged("name_");
					this.Onname_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="NVarChar(20)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_num", DbType="NVarChar(15)")]
		public string phone_num
		{
			get
			{
				return this._phone_num;
			}
			set
			{
				if ((this._phone_num != value))
				{
					this.Onphone_numChanging(value);
					this.SendPropertyChanging();
					this._phone_num = value;
					this.SendPropertyChanged("phone_num");
					this.Onphone_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="NVarChar(20)")]
		public string dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if ((this._picture != value))
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Admin", Storage="_User", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Admin = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Admin = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminTest")]
	public partial class AdminTest
	{
		
		private string _id;
		
		private string _usename;
		
		private string _name_;
		
		private string _sex;
		
		private string _phone_num;
		
		private string _dob;
		
		public AdminTest()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(100)")]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usename", DbType="NVarChar(50)")]
		public string usename
		{
			get
			{
				return this._usename;
			}
			set
			{
				if ((this._usename != value))
				{
					this._usename = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_", DbType="NVarChar(50)")]
		public string name_
		{
			get
			{
				return this._name_;
			}
			set
			{
				if ((this._name_ != value))
				{
					this._name_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="NVarChar(20)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this._sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_num", DbType="NVarChar(15)")]
		public string phone_num
		{
			get
			{
				return this._phone_num;
			}
			set
			{
				if ((this._phone_num != value))
				{
					this._phone_num = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="NVarChar(20)")]
		public string dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this._dob = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _class_id;
		
		private string _date_start;
		
		private string _date_end;
		
		private string _room;
		
		private System.Nullable<int> _capacity;
		
		private string _days_;
		
		private string _section_start;
		
		private string _section_end;
		
		private EntitySet<LectureRegisClass> _LectureRegisClasses;
		
		private EntitySet<OpenClass> _OpenClasses;
		
		private EntitySet<StudentRegisClass> _StudentRegisClasses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclass_idChanging(int value);
    partial void Onclass_idChanged();
    partial void Ondate_startChanging(string value);
    partial void Ondate_startChanged();
    partial void Ondate_endChanging(string value);
    partial void Ondate_endChanged();
    partial void OnroomChanging(string value);
    partial void OnroomChanged();
    partial void OncapacityChanging(System.Nullable<int> value);
    partial void OncapacityChanged();
    partial void Ondays_Changing(string value);
    partial void Ondays_Changed();
    partial void Onsection_startChanging(string value);
    partial void Onsection_startChanged();
    partial void Onsection_endChanging(string value);
    partial void Onsection_endChanged();
    #endregion
		
		public Class()
		{
			this._LectureRegisClasses = new EntitySet<LectureRegisClass>(new Action<LectureRegisClass>(this.attach_LectureRegisClasses), new Action<LectureRegisClass>(this.detach_LectureRegisClasses));
			this._OpenClasses = new EntitySet<OpenClass>(new Action<OpenClass>(this.attach_OpenClasses), new Action<OpenClass>(this.detach_OpenClasses));
			this._StudentRegisClasses = new EntitySet<StudentRegisClass>(new Action<StudentRegisClass>(this.attach_StudentRegisClasses), new Action<StudentRegisClass>(this.detach_StudentRegisClasses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int class_id
		{
			get
			{
				return this._class_id;
			}
			set
			{
				if ((this._class_id != value))
				{
					this.Onclass_idChanging(value);
					this.SendPropertyChanging();
					this._class_id = value;
					this.SendPropertyChanged("class_id");
					this.Onclass_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_start", DbType="NVarChar(20)")]
		public string date_start
		{
			get
			{
				return this._date_start;
			}
			set
			{
				if ((this._date_start != value))
				{
					this.Ondate_startChanging(value);
					this.SendPropertyChanging();
					this._date_start = value;
					this.SendPropertyChanged("date_start");
					this.Ondate_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_end", DbType="NVarChar(20)")]
		public string date_end
		{
			get
			{
				return this._date_end;
			}
			set
			{
				if ((this._date_end != value))
				{
					this.Ondate_endChanging(value);
					this.SendPropertyChanging();
					this._date_end = value;
					this.SendPropertyChanged("date_end");
					this.Ondate_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room", DbType="NVarChar(50)")]
		public string room
		{
			get
			{
				return this._room;
			}
			set
			{
				if ((this._room != value))
				{
					this.OnroomChanging(value);
					this.SendPropertyChanging();
					this._room = value;
					this.SendPropertyChanged("room");
					this.OnroomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacity", DbType="Int")]
		public System.Nullable<int> capacity
		{
			get
			{
				return this._capacity;
			}
			set
			{
				if ((this._capacity != value))
				{
					this.OncapacityChanging(value);
					this.SendPropertyChanging();
					this._capacity = value;
					this.SendPropertyChanged("capacity");
					this.OncapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_days_", DbType="NVarChar(20)")]
		public string days_
		{
			get
			{
				return this._days_;
			}
			set
			{
				if ((this._days_ != value))
				{
					this.Ondays_Changing(value);
					this.SendPropertyChanging();
					this._days_ = value;
					this.SendPropertyChanged("days_");
					this.Ondays_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_section_start", DbType="NVarChar(7)")]
		public string section_start
		{
			get
			{
				return this._section_start;
			}
			set
			{
				if ((this._section_start != value))
				{
					this.Onsection_startChanging(value);
					this.SendPropertyChanging();
					this._section_start = value;
					this.SendPropertyChanged("section_start");
					this.Onsection_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_section_end", DbType="NVarChar(7)")]
		public string section_end
		{
			get
			{
				return this._section_end;
			}
			set
			{
				if ((this._section_end != value))
				{
					this.Onsection_endChanging(value);
					this.SendPropertyChanging();
					this._section_end = value;
					this.SendPropertyChanged("section_end");
					this.Onsection_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_LectureRegisClass", Storage="_LectureRegisClasses", ThisKey="class_id", OtherKey="class_id")]
		public EntitySet<LectureRegisClass> LectureRegisClasses
		{
			get
			{
				return this._LectureRegisClasses;
			}
			set
			{
				this._LectureRegisClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_OpenClass", Storage="_OpenClasses", ThisKey="class_id", OtherKey="class_id")]
		public EntitySet<OpenClass> OpenClasses
		{
			get
			{
				return this._OpenClasses;
			}
			set
			{
				this._OpenClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_StudentRegisClass", Storage="_StudentRegisClasses", ThisKey="class_id", OtherKey="class_id")]
		public EntitySet<StudentRegisClass> StudentRegisClasses
		{
			get
			{
				return this._StudentRegisClasses;
			}
			set
			{
				this._StudentRegisClasses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LectureRegisClasses(LectureRegisClass entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_LectureRegisClasses(LectureRegisClass entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_OpenClasses(OpenClass entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_OpenClasses(OpenClass entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_StudentRegisClasses(StudentRegisClass entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_StudentRegisClasses(StudentRegisClass entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _department_id;
		
		private string _department_name;
		
		private EntitySet<Academic_Affair> _Academic_Affairs;
		
		private EntitySet<Student> _Students;
		
		private EntitySet<Subject_> _Subject_s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondepartment_idChanging(string value);
    partial void Ondepartment_idChanged();
    partial void Ondepartment_nameChanging(string value);
    partial void Ondepartment_nameChanged();
    #endregion
		
		public Department()
		{
			this._Academic_Affairs = new EntitySet<Academic_Affair>(new Action<Academic_Affair>(this.attach_Academic_Affairs), new Action<Academic_Affair>(this.detach_Academic_Affairs));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Subject_s = new EntitySet<Subject_>(new Action<Subject_>(this.attach_Subject_s), new Action<Subject_>(this.detach_Subject_s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_name", DbType="NVarChar(50)")]
		public string department_name
		{
			get
			{
				return this._department_name;
			}
			set
			{
				if ((this._department_name != value))
				{
					this.Ondepartment_nameChanging(value);
					this.SendPropertyChanging();
					this._department_name = value;
					this.SendPropertyChanged("department_name");
					this.Ondepartment_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Academic_Affair", Storage="_Academic_Affairs", ThisKey="department_id", OtherKey="department_id")]
		public EntitySet<Academic_Affair> Academic_Affairs
		{
			get
			{
				return this._Academic_Affairs;
			}
			set
			{
				this._Academic_Affairs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Student", Storage="_Students", ThisKey="department_id", OtherKey="department_id")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Subject_", Storage="_Subject_s", ThisKey="department_id", OtherKey="department_id")]
		public EntitySet<Subject_> Subject_s
		{
			get
			{
				return this._Subject_s;
			}
			set
			{
				this._Subject_s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Academic_Affairs(Academic_Affair entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Academic_Affairs(Academic_Affair entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_Subject_s(Subject_ entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Subject_s(Subject_ entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lecture")]
	public partial class Lecture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _email;
		
		private string _name_;
		
		private string _sex;
		
		private string _dob;
		
		private string _phone_num;
		
		private string _department_id;
		
		private string _status_;
		
		private System.Nullable<int> _Teaching_Experience;
		
		private string _Academic_rank;
		
		private string _assigned_subjects;
		
		private System.Data.Linq.Binary _picture;
		
		private EntitySet<LectureRegisClass> _LectureRegisClasses;
		
		private EntitySet<LectureVio> _LectureVios;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onname_Changing(string value);
    partial void Onname_Changed();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void OndobChanging(string value);
    partial void OndobChanged();
    partial void Onphone_numChanging(string value);
    partial void Onphone_numChanged();
    partial void Ondepartment_idChanging(string value);
    partial void Ondepartment_idChanged();
    partial void Onstatus_Changing(string value);
    partial void Onstatus_Changed();
    partial void OnTeaching_ExperienceChanging(System.Nullable<int> value);
    partial void OnTeaching_ExperienceChanged();
    partial void OnAcademic_rankChanging(string value);
    partial void OnAcademic_rankChanged();
    partial void Onassigned_subjectsChanging(string value);
    partial void Onassigned_subjectsChanged();
    partial void OnpictureChanging(System.Data.Linq.Binary value);
    partial void OnpictureChanged();
    #endregion
		
		public Lecture()
		{
			this._LectureRegisClasses = new EntitySet<LectureRegisClass>(new Action<LectureRegisClass>(this.attach_LectureRegisClasses), new Action<LectureRegisClass>(this.detach_LectureRegisClasses));
			this._LectureVios = new EntitySet<LectureVio>(new Action<LectureVio>(this.attach_LectureVios), new Action<LectureVio>(this.detach_LectureVios));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_", DbType="NVarChar(50)")]
		public string name_
		{
			get
			{
				return this._name_;
			}
			set
			{
				if ((this._name_ != value))
				{
					this.Onname_Changing(value);
					this.SendPropertyChanging();
					this._name_ = value;
					this.SendPropertyChanged("name_");
					this.Onname_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="NVarChar(10)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="NVarChar(20)")]
		public string dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_num", DbType="NVarChar(15)")]
		public string phone_num
		{
			get
			{
				return this._phone_num;
			}
			set
			{
				if ((this._phone_num != value))
				{
					this.Onphone_numChanging(value);
					this.SendPropertyChanging();
					this._phone_num = value;
					this.SendPropertyChanged("phone_num");
					this.Onphone_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", DbType="NVarChar(10)")]
		public string department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_", DbType="NVarChar(20)")]
		public string status_
		{
			get
			{
				return this._status_;
			}
			set
			{
				if ((this._status_ != value))
				{
					this.Onstatus_Changing(value);
					this.SendPropertyChanging();
					this._status_ = value;
					this.SendPropertyChanged("status_");
					this.Onstatus_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teaching_Experience", DbType="Int")]
		public System.Nullable<int> Teaching_Experience
		{
			get
			{
				return this._Teaching_Experience;
			}
			set
			{
				if ((this._Teaching_Experience != value))
				{
					this.OnTeaching_ExperienceChanging(value);
					this.SendPropertyChanging();
					this._Teaching_Experience = value;
					this.SendPropertyChanged("Teaching_Experience");
					this.OnTeaching_ExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Academic_rank", DbType="NVarChar(20)")]
		public string Academic_rank
		{
			get
			{
				return this._Academic_rank;
			}
			set
			{
				if ((this._Academic_rank != value))
				{
					this.OnAcademic_rankChanging(value);
					this.SendPropertyChanging();
					this._Academic_rank = value;
					this.SendPropertyChanged("Academic_rank");
					this.OnAcademic_rankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assigned_subjects", DbType="NVarChar(20)")]
		public string assigned_subjects
		{
			get
			{
				return this._assigned_subjects;
			}
			set
			{
				if ((this._assigned_subjects != value))
				{
					this.Onassigned_subjectsChanging(value);
					this.SendPropertyChanging();
					this._assigned_subjects = value;
					this.SendPropertyChanged("assigned_subjects");
					this.Onassigned_subjectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if ((this._picture != value))
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lecture_LectureRegisClass", Storage="_LectureRegisClasses", ThisKey="id", OtherKey="id")]
		public EntitySet<LectureRegisClass> LectureRegisClasses
		{
			get
			{
				return this._LectureRegisClasses;
			}
			set
			{
				this._LectureRegisClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lecture_LectureVio", Storage="_LectureVios", ThisKey="id", OtherKey="id")]
		public EntitySet<LectureVio> LectureVios
		{
			get
			{
				return this._LectureVios;
			}
			set
			{
				this._LectureVios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Lecture", Storage="_User", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Lecture = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Lecture = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LectureRegisClasses(LectureRegisClass entity)
		{
			this.SendPropertyChanging();
			entity.Lecture = this;
		}
		
		private void detach_LectureRegisClasses(LectureRegisClass entity)
		{
			this.SendPropertyChanging();
			entity.Lecture = null;
		}
		
		private void attach_LectureVios(LectureVio entity)
		{
			this.SendPropertyChanging();
			entity.Lecture = this;
		}
		
		private void detach_LectureVios(LectureVio entity)
		{
			this.SendPropertyChanging();
			entity.Lecture = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LectureRegisClass")]
	public partial class LectureRegisClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _class_id;
		
		private string _date_register;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Lecture> _Lecture;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onclass_idChanging(int value);
    partial void Onclass_idChanged();
    partial void Ondate_registerChanging(string value);
    partial void Ondate_registerChanged();
    #endregion
		
		public LectureRegisClass()
		{
			this._Class = default(EntityRef<Class>);
			this._Lecture = default(EntityRef<Lecture>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Lecture.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int class_id
		{
			get
			{
				return this._class_id;
			}
			set
			{
				if ((this._class_id != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclass_idChanging(value);
					this.SendPropertyChanging();
					this._class_id = value;
					this.SendPropertyChanged("class_id");
					this.Onclass_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_register", DbType="NVarChar(20)")]
		public string date_register
		{
			get
			{
				return this._date_register;
			}
			set
			{
				if ((this._date_register != value))
				{
					this.Ondate_registerChanging(value);
					this.SendPropertyChanging();
					this._date_register = value;
					this.SendPropertyChanged("date_register");
					this.Ondate_registerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_LectureRegisClass", Storage="_Class", ThisKey="class_id", OtherKey="class_id", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.LectureRegisClasses.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.LectureRegisClasses.Add(this);
						this._class_id = value.class_id;
					}
					else
					{
						this._class_id = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lecture_LectureRegisClass", Storage="_Lecture", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Lecture Lecture
		{
			get
			{
				return this._Lecture.Entity;
			}
			set
			{
				Lecture previousValue = this._Lecture.Entity;
				if (((previousValue != value) 
							|| (this._Lecture.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lecture.Entity = null;
						previousValue.LectureRegisClasses.Remove(this);
					}
					this._Lecture.Entity = value;
					if ((value != null))
					{
						value.LectureRegisClasses.Add(this);
						this._id = value.id;
					}
					else
					{
						this._id = default(string);
					}
					this.SendPropertyChanged("Lecture");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LectureVio")]
	public partial class LectureVio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _rules_id;
		
		private string _status_;
		
		private string _date_;
		
		private EntityRef<Lecture> _Lecture;
		
		private EntityRef<Violate> _Violate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onrules_idChanging(int value);
    partial void Onrules_idChanged();
    partial void Onstatus_Changing(string value);
    partial void Onstatus_Changed();
    partial void Ondate_Changing(string value);
    partial void Ondate_Changed();
    #endregion
		
		public LectureVio()
		{
			this._Lecture = default(EntityRef<Lecture>);
			this._Violate = default(EntityRef<Violate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Lecture.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rules_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int rules_id
		{
			get
			{
				return this._rules_id;
			}
			set
			{
				if ((this._rules_id != value))
				{
					if (this._Violate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrules_idChanging(value);
					this.SendPropertyChanging();
					this._rules_id = value;
					this.SendPropertyChanged("rules_id");
					this.Onrules_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_", DbType="NVarChar(50)")]
		public string status_
		{
			get
			{
				return this._status_;
			}
			set
			{
				if ((this._status_ != value))
				{
					this.Onstatus_Changing(value);
					this.SendPropertyChanging();
					this._status_ = value;
					this.SendPropertyChanged("status_");
					this.Onstatus_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_", DbType="NVarChar(20)")]
		public string date_
		{
			get
			{
				return this._date_;
			}
			set
			{
				if ((this._date_ != value))
				{
					this.Ondate_Changing(value);
					this.SendPropertyChanging();
					this._date_ = value;
					this.SendPropertyChanged("date_");
					this.Ondate_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lecture_LectureVio", Storage="_Lecture", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Lecture Lecture
		{
			get
			{
				return this._Lecture.Entity;
			}
			set
			{
				Lecture previousValue = this._Lecture.Entity;
				if (((previousValue != value) 
							|| (this._Lecture.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lecture.Entity = null;
						previousValue.LectureVios.Remove(this);
					}
					this._Lecture.Entity = value;
					if ((value != null))
					{
						value.LectureVios.Add(this);
						this._id = value.id;
					}
					else
					{
						this._id = default(string);
					}
					this.SendPropertyChanged("Lecture");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Violate_LectureVio", Storage="_Violate", ThisKey="rules_id", OtherKey="rules_id", IsForeignKey=true)]
		public Violate Violate
		{
			get
			{
				return this._Violate.Entity;
			}
			set
			{
				Violate previousValue = this._Violate.Entity;
				if (((previousValue != value) 
							|| (this._Violate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Violate.Entity = null;
						previousValue.LectureVios.Remove(this);
					}
					this._Violate.Entity = value;
					if ((value != null))
					{
						value.LectureVios.Add(this);
						this._rules_id = value.rules_id;
					}
					else
					{
						this._rules_id = default(int);
					}
					this.SendPropertyChanged("Violate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OpenClass")]
	public partial class OpenClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _course_id;
		
		private int _class_id;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Subject_> _Subject_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncourse_idChanging(string value);
    partial void Oncourse_idChanged();
    partial void Onclass_idChanging(int value);
    partial void Onclass_idChanged();
    #endregion
		
		public OpenClass()
		{
			this._Class = default(EntityRef<Class>);
			this._Subject_ = default(EntityRef<Subject_>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					if (this._Subject_.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int class_id
		{
			get
			{
				return this._class_id;
			}
			set
			{
				if ((this._class_id != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclass_idChanging(value);
					this.SendPropertyChanging();
					this._class_id = value;
					this.SendPropertyChanged("class_id");
					this.Onclass_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_OpenClass", Storage="_Class", ThisKey="class_id", OtherKey="class_id", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.OpenClasses.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.OpenClasses.Add(this);
						this._class_id = value.class_id;
					}
					else
					{
						this._class_id = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject__OpenClass", Storage="_Subject_", ThisKey="course_id", OtherKey="course_id", IsForeignKey=true)]
		public Subject_ Subject_
		{
			get
			{
				return this._Subject_.Entity;
			}
			set
			{
				Subject_ previousValue = this._Subject_.Entity;
				if (((previousValue != value) 
							|| (this._Subject_.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject_.Entity = null;
						previousValue.OpenClasses.Remove(this);
					}
					this._Subject_.Entity = value;
					if ((value != null))
					{
						value.OpenClasses.Add(this);
						this._course_id = value.course_id;
					}
					else
					{
						this._course_id = default(string);
					}
					this.SendPropertyChanged("Subject_");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name_;
		
		private string _sex;
		
		private string _school_year;
		
		private string _dob;
		
		private string _phone_num;
		
		private string _department_id;
		
		private System.Nullable<int> _tot_cred;
		
		private string _status_;
		
		private System.Data.Linq.Binary _picture;
		
		private EntitySet<StudentRegisClass> _StudentRegisClasses;
		
		private EntitySet<StudentVio> _StudentVios;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onname_Changing(string value);
    partial void Onname_Changed();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void Onschool_yearChanging(string value);
    partial void Onschool_yearChanged();
    partial void OndobChanging(string value);
    partial void OndobChanged();
    partial void Onphone_numChanging(string value);
    partial void Onphone_numChanged();
    partial void Ondepartment_idChanging(string value);
    partial void Ondepartment_idChanged();
    partial void Ontot_credChanging(System.Nullable<int> value);
    partial void Ontot_credChanged();
    partial void Onstatus_Changing(string value);
    partial void Onstatus_Changed();
    partial void OnpictureChanging(System.Data.Linq.Binary value);
    partial void OnpictureChanged();
    #endregion
		
		public Student()
		{
			this._StudentRegisClasses = new EntitySet<StudentRegisClass>(new Action<StudentRegisClass>(this.attach_StudentRegisClasses), new Action<StudentRegisClass>(this.detach_StudentRegisClasses));
			this._StudentVios = new EntitySet<StudentVio>(new Action<StudentVio>(this.attach_StudentVios), new Action<StudentVio>(this.detach_StudentVios));
			this._Department = default(EntityRef<Department>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_", DbType="NVarChar(50)")]
		public string name_
		{
			get
			{
				return this._name_;
			}
			set
			{
				if ((this._name_ != value))
				{
					this.Onname_Changing(value);
					this.SendPropertyChanging();
					this._name_ = value;
					this.SendPropertyChanged("name_");
					this.Onname_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="NVarChar(20)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school_year", DbType="NVarChar(50)")]
		public string school_year
		{
			get
			{
				return this._school_year;
			}
			set
			{
				if ((this._school_year != value))
				{
					this.Onschool_yearChanging(value);
					this.SendPropertyChanging();
					this._school_year = value;
					this.SendPropertyChanged("school_year");
					this.Onschool_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="NVarChar(20)")]
		public string dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_num", DbType="NVarChar(15)")]
		public string phone_num
		{
			get
			{
				return this._phone_num;
			}
			set
			{
				if ((this._phone_num != value))
				{
					this.Onphone_numChanging(value);
					this.SendPropertyChanging();
					this._phone_num = value;
					this.SendPropertyChanged("phone_num");
					this.Onphone_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", DbType="NVarChar(10)")]
		public string department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tot_cred", DbType="Int")]
		public System.Nullable<int> tot_cred
		{
			get
			{
				return this._tot_cred;
			}
			set
			{
				if ((this._tot_cred != value))
				{
					this.Ontot_credChanging(value);
					this.SendPropertyChanging();
					this._tot_cred = value;
					this.SendPropertyChanged("tot_cred");
					this.Ontot_credChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_", DbType="NVarChar(50)")]
		public string status_
		{
			get
			{
				return this._status_;
			}
			set
			{
				if ((this._status_ != value))
				{
					this.Onstatus_Changing(value);
					this.SendPropertyChanging();
					this._status_ = value;
					this.SendPropertyChanged("status_");
					this.Onstatus_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if ((this._picture != value))
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentRegisClass", Storage="_StudentRegisClasses", ThisKey="id", OtherKey="id")]
		public EntitySet<StudentRegisClass> StudentRegisClasses
		{
			get
			{
				return this._StudentRegisClasses;
			}
			set
			{
				this._StudentRegisClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentVio", Storage="_StudentVios", ThisKey="id", OtherKey="id")]
		public EntitySet<StudentVio> StudentVios
		{
			get
			{
				return this._StudentVios;
			}
			set
			{
				this._StudentVios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Student", Storage="_Department", ThisKey="department_id", OtherKey="department_id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._department_id = value.department_id;
					}
					else
					{
						this._department_id = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Student", Storage="_User", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Student = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Student = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentRegisClasses(StudentRegisClass entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentRegisClasses(StudentRegisClass entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_StudentVios(StudentVio entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentVios(StudentVio entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentRegisClass")]
	public partial class StudentRegisClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _class_id;
		
		private string _date_register;
		
		private string _status_;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onclass_idChanging(int value);
    partial void Onclass_idChanged();
    partial void Ondate_registerChanging(string value);
    partial void Ondate_registerChanged();
    partial void Onstatus_Changing(string value);
    partial void Onstatus_Changed();
    #endregion
		
		public StudentRegisClass()
		{
			this._Class = default(EntityRef<Class>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_class_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int class_id
		{
			get
			{
				return this._class_id;
			}
			set
			{
				if ((this._class_id != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclass_idChanging(value);
					this.SendPropertyChanging();
					this._class_id = value;
					this.SendPropertyChanged("class_id");
					this.Onclass_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_register", DbType="NVarChar(20)")]
		public string date_register
		{
			get
			{
				return this._date_register;
			}
			set
			{
				if ((this._date_register != value))
				{
					this.Ondate_registerChanging(value);
					this.SendPropertyChanging();
					this._date_register = value;
					this.SendPropertyChanged("date_register");
					this.Ondate_registerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_", DbType="NVarChar(20)")]
		public string status_
		{
			get
			{
				return this._status_;
			}
			set
			{
				if ((this._status_ != value))
				{
					this.Onstatus_Changing(value);
					this.SendPropertyChanging();
					this._status_ = value;
					this.SendPropertyChanged("status_");
					this.Onstatus_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_StudentRegisClass", Storage="_Class", ThisKey="class_id", OtherKey="class_id", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.StudentRegisClasses.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.StudentRegisClasses.Add(this);
						this._class_id = value.class_id;
					}
					else
					{
						this._class_id = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentRegisClass", Storage="_Student", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentRegisClasses.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentRegisClasses.Add(this);
						this._id = value.id;
					}
					else
					{
						this._id = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentVio")]
	public partial class StudentVio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private int _rules_id;
		
		private string _status_;
		
		private string _date_;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<Violate> _Violate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onrules_idChanging(int value);
    partial void Onrules_idChanged();
    partial void Onstatus_Changing(string value);
    partial void Onstatus_Changed();
    partial void Ondate_Changing(string value);
    partial void Ondate_Changed();
    #endregion
		
		public StudentVio()
		{
			this._Student = default(EntityRef<Student>);
			this._Violate = default(EntityRef<Violate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rules_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int rules_id
		{
			get
			{
				return this._rules_id;
			}
			set
			{
				if ((this._rules_id != value))
				{
					if (this._Violate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrules_idChanging(value);
					this.SendPropertyChanging();
					this._rules_id = value;
					this.SendPropertyChanged("rules_id");
					this.Onrules_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_", DbType="NVarChar(50)")]
		public string status_
		{
			get
			{
				return this._status_;
			}
			set
			{
				if ((this._status_ != value))
				{
					this.Onstatus_Changing(value);
					this.SendPropertyChanging();
					this._status_ = value;
					this.SendPropertyChanged("status_");
					this.Onstatus_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_", DbType="NVarChar(50)")]
		public string date_
		{
			get
			{
				return this._date_;
			}
			set
			{
				if ((this._date_ != value))
				{
					this.Ondate_Changing(value);
					this.SendPropertyChanging();
					this._date_ = value;
					this.SendPropertyChanged("date_");
					this.Ondate_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentVio", Storage="_Student", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentVios.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentVios.Add(this);
						this._id = value.id;
					}
					else
					{
						this._id = default(string);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Violate_StudentVio", Storage="_Violate", ThisKey="rules_id", OtherKey="rules_id", IsForeignKey=true)]
		public Violate Violate
		{
			get
			{
				return this._Violate.Entity;
			}
			set
			{
				Violate previousValue = this._Violate.Entity;
				if (((previousValue != value) 
							|| (this._Violate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Violate.Entity = null;
						previousValue.StudentVios.Remove(this);
					}
					this._Violate.Entity = value;
					if ((value != null))
					{
						value.StudentVios.Add(this);
						this._rules_id = value.rules_id;
					}
					else
					{
						this._rules_id = default(int);
					}
					this.SendPropertyChanged("Violate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subject_")]
	public partial class Subject_ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _course_id;
		
		private string _course_name;
		
		private string _department_id;
		
		private System.Nullable<int> _credits;
		
		private System.Nullable<decimal> _cost;
		
		private EntitySet<OpenClass> _OpenClasses;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncourse_idChanging(string value);
    partial void Oncourse_idChanged();
    partial void Oncourse_nameChanging(string value);
    partial void Oncourse_nameChanged();
    partial void Ondepartment_idChanging(string value);
    partial void Ondepartment_idChanged();
    partial void OncreditsChanging(System.Nullable<int> value);
    partial void OncreditsChanged();
    partial void OncostChanging(System.Nullable<decimal> value);
    partial void OncostChanged();
    #endregion
		
		public Subject_()
		{
			this._OpenClasses = new EntitySet<OpenClass>(new Action<OpenClass>(this.attach_OpenClasses), new Action<OpenClass>(this.detach_OpenClasses));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_name", DbType="NVarChar(50)")]
		public string course_name
		{
			get
			{
				return this._course_name;
			}
			set
			{
				if ((this._course_name != value))
				{
					this.Oncourse_nameChanging(value);
					this.SendPropertyChanging();
					this._course_name = value;
					this.SendPropertyChanged("course_name");
					this.Oncourse_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", DbType="NVarChar(10)")]
		public string department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credits", DbType="Int")]
		public System.Nullable<int> credits
		{
			get
			{
				return this._credits;
			}
			set
			{
				if ((this._credits != value))
				{
					this.OncreditsChanging(value);
					this.SendPropertyChanging();
					this._credits = value;
					this.SendPropertyChanged("credits");
					this.OncreditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject__OpenClass", Storage="_OpenClasses", ThisKey="course_id", OtherKey="course_id")]
		public EntitySet<OpenClass> OpenClasses
		{
			get
			{
				return this._OpenClasses;
			}
			set
			{
				this._OpenClasses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Subject_", Storage="_Department", ThisKey="department_id", OtherKey="department_id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Subject_s.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Subject_s.Add(this);
						this._department_id = value.department_id;
					}
					else
					{
						this._department_id = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OpenClasses(OpenClass entity)
		{
			this.SendPropertyChanging();
			entity.Subject_ = this;
		}
		
		private void detach_OpenClasses(OpenClass entity)
		{
			this.SendPropertyChanging();
			entity.Subject_ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _password_;
		
		private string _role_;
		
		private string _pin;
		
		private EntityRef<Academic_Affair> _Academic_Affair;
		
		private EntityRef<Admin> _Admin;
		
		private EntityRef<Lecture> _Lecture;
		
		private EntityRef<Student> _Student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void Onpassword_Changing(string value);
    partial void Onpassword_Changed();
    partial void Onrole_Changing(string value);
    partial void Onrole_Changed();
    partial void OnpinChanging(string value);
    partial void OnpinChanged();
    #endregion
		
		public User()
		{
			this._Academic_Affair = default(EntityRef<Academic_Affair>);
			this._Admin = default(EntityRef<Admin>);
			this._Lecture = default(EntityRef<Lecture>);
			this._Student = default(EntityRef<Student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password_", DbType="NVarChar(50)")]
		public string password_
		{
			get
			{
				return this._password_;
			}
			set
			{
				if ((this._password_ != value))
				{
					this.Onpassword_Changing(value);
					this.SendPropertyChanging();
					this._password_ = value;
					this.SendPropertyChanged("password_");
					this.Onpassword_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_", DbType="NVarChar(50)")]
		public string role_
		{
			get
			{
				return this._role_;
			}
			set
			{
				if ((this._role_ != value))
				{
					this.Onrole_Changing(value);
					this.SendPropertyChanging();
					this._role_ = value;
					this.SendPropertyChanged("role_");
					this.Onrole_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pin", DbType="NVarChar(6)")]
		public string pin
		{
			get
			{
				return this._pin;
			}
			set
			{
				if ((this._pin != value))
				{
					this.OnpinChanging(value);
					this.SendPropertyChanging();
					this._pin = value;
					this.SendPropertyChanged("pin");
					this.OnpinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Academic_Affair", Storage="_Academic_Affair", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Academic_Affair Academic_Affair
		{
			get
			{
				return this._Academic_Affair.Entity;
			}
			set
			{
				Academic_Affair previousValue = this._Academic_Affair.Entity;
				if (((previousValue != value) 
							|| (this._Academic_Affair.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Academic_Affair.Entity = null;
						previousValue.User = null;
					}
					this._Academic_Affair.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Academic_Affair");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Admin", Storage="_Admin", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.User = null;
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Lecture", Storage="_Lecture", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Lecture Lecture
		{
			get
			{
				return this._Lecture.Entity;
			}
			set
			{
				Lecture previousValue = this._Lecture.Entity;
				if (((previousValue != value) 
							|| (this._Lecture.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lecture.Entity = null;
						previousValue.User = null;
					}
					this._Lecture.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Lecture");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Student", Storage="_Student", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.User = null;
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Violate")]
	public partial class Violate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _rules_id;
		
		private string _rules_name;
		
		private string _rules_punishment;
		
		private string _object_;
		
		private EntitySet<LectureVio> _LectureVios;
		
		private EntitySet<StudentVio> _StudentVios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrules_idChanging(int value);
    partial void Onrules_idChanged();
    partial void Onrules_nameChanging(string value);
    partial void Onrules_nameChanged();
    partial void Onrules_punishmentChanging(string value);
    partial void Onrules_punishmentChanged();
    partial void Onobject_Changing(string value);
    partial void Onobject_Changed();
    #endregion
		
		public Violate()
		{
			this._LectureVios = new EntitySet<LectureVio>(new Action<LectureVio>(this.attach_LectureVios), new Action<LectureVio>(this.detach_LectureVios));
			this._StudentVios = new EntitySet<StudentVio>(new Action<StudentVio>(this.attach_StudentVios), new Action<StudentVio>(this.detach_StudentVios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rules_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int rules_id
		{
			get
			{
				return this._rules_id;
			}
			set
			{
				if ((this._rules_id != value))
				{
					this.Onrules_idChanging(value);
					this.SendPropertyChanging();
					this._rules_id = value;
					this.SendPropertyChanged("rules_id");
					this.Onrules_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rules_name", DbType="NVarChar(50)")]
		public string rules_name
		{
			get
			{
				return this._rules_name;
			}
			set
			{
				if ((this._rules_name != value))
				{
					this.Onrules_nameChanging(value);
					this.SendPropertyChanging();
					this._rules_name = value;
					this.SendPropertyChanged("rules_name");
					this.Onrules_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rules_punishment", DbType="NVarChar(50)")]
		public string rules_punishment
		{
			get
			{
				return this._rules_punishment;
			}
			set
			{
				if ((this._rules_punishment != value))
				{
					this.Onrules_punishmentChanging(value);
					this.SendPropertyChanging();
					this._rules_punishment = value;
					this.SendPropertyChanged("rules_punishment");
					this.Onrules_punishmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_object_", DbType="NVarChar(50)")]
		public string object_
		{
			get
			{
				return this._object_;
			}
			set
			{
				if ((this._object_ != value))
				{
					this.Onobject_Changing(value);
					this.SendPropertyChanging();
					this._object_ = value;
					this.SendPropertyChanged("object_");
					this.Onobject_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Violate_LectureVio", Storage="_LectureVios", ThisKey="rules_id", OtherKey="rules_id")]
		public EntitySet<LectureVio> LectureVios
		{
			get
			{
				return this._LectureVios;
			}
			set
			{
				this._LectureVios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Violate_StudentVio", Storage="_StudentVios", ThisKey="rules_id", OtherKey="rules_id")]
		public EntitySet<StudentVio> StudentVios
		{
			get
			{
				return this._StudentVios;
			}
			set
			{
				this._StudentVios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LectureVios(LectureVio entity)
		{
			this.SendPropertyChanging();
			entity.Violate = this;
		}
		
		private void detach_LectureVios(LectureVio entity)
		{
			this.SendPropertyChanging();
			entity.Violate = null;
		}
		
		private void attach_StudentVios(StudentVio entity)
		{
			this.SendPropertyChanging();
			entity.Violate = this;
		}
		
		private void detach_StudentVios(StudentVio entity)
		{
			this.SendPropertyChanging();
			entity.Violate = null;
		}
	}
}
#pragma warning restore 1591
